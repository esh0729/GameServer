using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ServerFramework
{
	//=====================================================================================================================
	// (ISFWork 상속) 수신된 클라이언트 요청을 처리하기 위한 초기화 및 실행 함수를 제공하는 추상 클래스
	//=====================================================================================================================
	public abstract class SFHandler : ISFWork
	{
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Member variables

		// 클라이언트 피어
		protected SFPeerImpl m_peer = null;

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Properties

		// 클라이언트 피어
		public SFPeerImpl peer
		{
			get { return m_peer; }
		}

		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		// Member functions

		//=====================================================================================================================
		// 분류된 클라이언트 요청으로 작업을 실행하기 위해 초기화 처리를 하는 함수
		//
		// peer : 요청을 송신한 클라이언트의 피어
		// nName : 명령 타입
		// lnCommandId : 명령의 고유 ID
		// packet : 인게임에 사용될 내부 패킷
		//=====================================================================================================================
		public void Init(SFPeerImpl peer, int nName, long lnCommandId, byte[] packet)
		{
			if (peer == null)
				throw new ArgumentNullException("peer");

			// 클라이언트 피어 설정
			m_peer = peer;

			// 자식 클래스의 초기화 함수 호출
			InitInternal(nName, lnCommandId, packet);
		}

		//=====================================================================================================================
		// 자식 클래스의 초기화를 위한 함수
		//
		// nName : 명령 타입
		// lnCommandId : 명령의 고유 ID
		// packet : 인게임에 사용될 내부 패킷
		//=====================================================================================================================
		protected abstract void InitInternal(int nName, long lnCommandId, byte[] packet);

		//=====================================================================================================================
		// 요청에 대한 작업을 처리할때 필요한 동기화 작업을 처리하기 위한 추상 함수
		//=====================================================================================================================
		public abstract void Run();

		//=====================================================================================================================
		// 요청에 대한 작업을 처리하는 추상 함수
		//=====================================================================================================================
		protected abstract void OnHandle();
	}
}
